AWSTemplateFormatVersion: 2010-09-09
Description: |
  This template shows how to use AWS CodePipeline and AWS CodeBuild to build an automated continuous deployment pipeline to Amazon Elastic Container Service (Amazon ECS) using clusters powered by AWS Fargate or Amazon Elastic Compute Cloud (Amazon EC2).
Parameters:
  LaunchType:
    Type: String
    Default: Fargate
    AllowedValues:
      - Fargate
      - EC2
    Description: |
      The launch type for your service. Selecting EC2 will create an Auto Scaling group of t2.micro instances for your cluster. See https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html to learn more about launch types.
  GitHubUser:
    Type: String
    Description: Your username on GitHub.
  GitHubRepo:
    Type: String
    Default: ecs-demo-php-simple-app
    Description: The repo name of the sample service.
  GitHubBranch:
    Type: String
    Default: master
    Description: The branch of the repo to continuously deploy.
  GitHubToken:
    Type: String
    NoEcho: true
    Description: |
      Token for the user specified above. (https://github.com/settings/tokens)
  PublicSubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
    Description: |
      Comma delimited private subnet IDs for the ELB to deploy into.
  PrivateSubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
    Description: |
      Comma delimited private subnet IDs for ECS to deploy into.
  TemplateBucket:
    Type: String
    Default: ecs-refarch-continuous-deployment
    Description: |
      The S3 bucket from which to fetch the templates used by this stack.
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: |
      VPC ID for ECS/ELB to deploy into.
Metadata:
  AWS::CloudFormation::Interface:
    ParameterLabels:
      GitHubUser:
        default: User
      GitHubRepo:
        default: Repo
      GitHubBranch:
        default: Branch
      GitHubToken:
        default: Personal Access Token
      LaunchType:
        default: Launch Type
    ParameterGroups:
      - Label:
          default: Cluster Configuration
        Parameters:
          - LaunchType
      - Label:
          default: GitHub Configuration
        Parameters:
          - GitHubRepo
          - GitHubBranch
          - GitHubUser
          - GitHubToken
      - Label:
          default: Stack Configuration
        Parameters:
          - TemplateBucket
Resources:
  Cluster:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub 'https://s3.amazonaws.com/${TemplateBucket}/templates/ecs-cluster.yaml'
      Parameters:
        LaunchType: !Ref 'LaunchType'
        SourceSecurityGroup: !GetAtt 'LoadBalancer.Outputs.SecurityGroup'
        PrivateSubnets: !Ref 'PrivateSubnetIds'
        VpcId: !Ref 'VpcId'
  DeploymentPipeline:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub 'https://s3.amazonaws.com/${TemplateBucket}/templates/deployment-pipeline.yaml'
      Parameters:
        Cluster: !GetAtt 'Cluster.Outputs.ClusterName'
        Service: !GetAtt 'Service.Outputs.Service'
        GitHubUser: !Ref 'GitHubUser'
        GitHubToken: !Ref 'GitHubToken'
        GitHubRepo: !Ref 'GitHubRepo'
        GitHubBranch: !Ref 'GitHubBranch'
  LoadBalancer:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub 'https://s3.amazonaws.com/${TemplateBucket}/templates/load-balancer.yaml'
      Parameters:
        LaunchType: !Ref 'LaunchType'
        PublicSubnets: !Ref 'PublicSubnetIds'
        VpcId: !Ref 'VpcId'
  Service:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub 'https://s3.amazonaws.com/${TemplateBucket}/templates/service.yaml'
      Parameters:
        Cluster: !GetAtt 'Cluster.Outputs.ClusterName'
        LaunchType: !Ref 'LaunchType'
        TargetGroup: !GetAtt 'LoadBalancer.Outputs.TargetGroup'
        SourceSecurityGroup: !GetAtt 'LoadBalancer.Outputs.SecurityGroup'
        PrivateSubnets: !Ref 'PrivateSubnetIds'
Outputs:
  ServiceUrl:
    Description: The sample service that is being continuously deployed.
    Value: !GetAtt 'LoadBalancer.Outputs.ServiceUrl'
  PipelineUrl:
    Description: The continuous deployment pipeline in the AWS Management Console.
    Value: !GetAtt 'DeploymentPipeline.Outputs.PipelineUrl'